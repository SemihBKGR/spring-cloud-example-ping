version: '3.9'

services:
  postgres:
    image: postgres:13.2
    hostname: postgres
    container_name: postgresql
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - ping-req
  keycloak:
    image: jboss/keycloak:latest
    hostname: keycloak
    container_name: keycloak-server
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: users
      DB_USER: user
      DB_PASSWORD: password
      KEYCLOAK_USER: user
      KEYCLOAK_PASSWORD: password
    volumes:
      - ./volumes/keycloak/imports:/opt/jboss/keycloak/imports
    command:
      - '-b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json'
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - ping-req
  mongo:
    image: mongo:latest
    hostname: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./volumes/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - ping-req
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper-server
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ping-req
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka-server
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - ping-req
  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus-server
    volumes:
      - ./volumes/prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - ping-req

networks:
  ping-req:
    name: ping-req-network
    external: false
