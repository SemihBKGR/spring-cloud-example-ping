version: '3.9'
services:
  config:
    build: config-service/.
    hostname: config
    container_name: config-server
    ports:
      - 8888:8888
    networks:
      - ping
  eureka:
    build: discovery-service/.
    hostname: discovery
    container_name: eureka-server
    ports:
      - 8761:8761
    networks:
      - ping
    depends_on:
      - config
  gateway:
    build: gateway-service/.
    hostname: gateway
    container_name: gateway-server
    ports:
      - 8000:8000
    -networks:
      - ping
    depends_on:
      - config
      - eureka
  user:
    build: user-service/.
    hostname: user
    container_name: user-server
    ports:
      - 9000:9000
    networks:
      - ping
    depends_on:
      - config
      - eureka
      - keycloak
  domain:
    build: domain-service/.
    hostname: domain
    container_name: domain-server
    ports:
      - 9010:9010
    networks:
      - ping
    depends_on:
      - config
      - eureka
      - mongo
  schedule:
    build: schedule-service/.
    container_name: schedule-server
    networks:
      - ping
    depends_on:
      - config
      - mongo
      - eureka
  process:
    build: process-service/.
    container_name: process-server
    networks:
      - ping
    depends_on:
      - config
  postgres:
    image: postgres:13.2
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - ping
  keycloak:
    image: jboss/keycloak:latest
    container_name: keycloak-server
    hostname: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: users
      DB_USER: user
      DB_PASSWORD: password
      KEYCLOAK_USER: user
      KEYCLOAK_PASSWORD: password
    volumes:
      - ./volumes/keycloak/imports:/opt/jboss/keycloak/imports
    command:
      - '-b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json'
    ports:
      - 8080:8080
    networks:
      - ping
    depends_on:
      - postgres
  mongo:
    image: mongo:latest
    hostname: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - /volumes/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - 27017:27017
    networks:
      - ping
networks:
  ping:
    name: ping-network